<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 97c4cc92207255ea09308d2646441dd61448d924 Maintainer: avenger Status: ready -->
<!-- CREDITS: mowangjuanzi, Luffy -->
<sect1 xml:id="migration73.other-changes" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>其它变更</title>

 <sect2 xml:id="migration73.other-changes.core">
  <title>PHP 核心</title>

  <sect3 xml:id="migration73.other-changes.core.setcookie">
   <title>Set(raw)cookie 函数接受 $option 数组参数</title>

   <para>
    <function>setcookie</function> 和 <function>setrawcookie</function> 现在还支持以下签名：
    <methodsynopsis>
     <type>bool</type><methodname>setcookie</methodname>
     <methodparam><type>string</type><parameter>name</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>value</parameter><initializer>""</initializer></methodparam>
     <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>[]</initializer></methodparam>
    </methodsynopsis>
    <literal>$options</literal> 是关联数组，可以存在以下任意 key
    <literal>"expires"</literal>、<literal>"path"</literal>、<literal>"domain"</literal>、<literal>"secure"</literal>、<literal>"httponly"</literal>
    和 <literal>"samesite"</literal>。
   </para>
  </sect3>

  <sect3 xml:id="migration73.other-changes.core.syslog">
   <title>新的 Syslog ini 配置</title>

   <para>
    如果 <link linkend="ini.error-log">error_log</link> 设置为
    <literal>syslog</literal>，则新增以下 ini 指令来自定义日志记录：
    <variablelist>
     <varlistentry>
      <term><link linkend="ini.syslog.facility">syslog.facility</link></term>
      <listitem>
       <simpara>
        指定记录消息的程序类型。
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><link linkend="ini.syslog.filter">syslog.filter</link></term>
      <listitem>
       <simpara>
        指定过滤纪录消息的过滤器类型，支持的过滤器类型——<literal>all</literal>、<literal>no-ctrl</literal>
        和 <literal>ascii</literal>。自 PHP 7.3.8 起，<literal>raw</literal>
        也可以使用，恢复了 syslog 在之前 PHP 版本中的行为方式。此过滤器还会影响
        <function>syslog</function> 的调用，
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><link linkend="ini.syslog.ident">syslog.ident</link></term>
      <listitem>
       <simpara>
        指定在每条消息前面添加的标识符（ident）字符串。
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
  </sect3>

  <sect3 xml:id="migration73.other-changes.core.gc">
   <title>垃圾回收机制</title>

   <para>
    <link linkend="features.gc.collecting-cycles">循环 GC</link>
    已增强，这可能会带来相当大的性能改进。
   </para>
  </sect3>

  <sect3 xml:id="migration73.other-changes.core.misc">
   <title>其它</title>

   <para>
    <function>var_export</function> 现在导出 <classname>stdClass</classname>
    为数组转换为对象（<code>(object) array( ... )</code>），而不是使用不存在的方法
    <methodname>stdClass::__setState</methodname>。
   </para>

   <para>
    <function>debug_zval_dump</function> 已变更为跟 <function>var_dump</function>
    一样的方式显示递归数组和对象。现在，不会重复展示两次了。
   </para>

   <para>
    <function>array_push</function> 和 <function>array_unshift</function> 现在也可以使用单个参数调用，这对于展开运算符来说尤其方便。
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration73.other-changes.phpdbg">
  <title>交互式 PHP 调试程序</title>

  <para>
   已移除未使用的常量 <constant>PHPDBG_FILE</constant>、<constant>PHPDBG_METHOD</constant>、<constant>PHPDBG_LINENO</constant>
   和 <constant>PHPDBG_FUNC</constant>。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.fpm">
  <title>FastCGI 进程管理器</title>

  <para>
   <function>getallheaders</function> 函数现已可用。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.curl">
  <title>客户端 URL 库</title>

  <para>
   现在需要 libcurl ≥ 7.15.5。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.filter">
  <title>数据过滤</title>

  <para>
   <constant>FILTER_VALIDATE_FLOAT</constant> 现在还支持 <literal>thousand</literal>
   选项，该选项定义允许的千位分隔符集合。默认值（<code>"',."</code>）与以前的 PHP 版本完全向后兼容。
  </para>

  <para>
   <constant>FILTER_SANITIZE_ADD_SLASHES</constant> 已添加为 <literal>magic_quotes</literal>
   过滤器（<constant>FILTER_SANITIZE_MAGIC_QUOTES</constant>）的别名。 <literal>magic_quotes</literal>
   过滤器可能会在未来的 PHP 版本中移除。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.ftp">
  <title>FTP</title>

  <para>
   默认传输模式已更改为 <literal>binary</literal>。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.intl">
  <title>国际化相关函数</title>

  <para>
   当 PHP 链接到 ICU ≥ 56 时，<constant>Normalizer::NONE</constant> 已弃用。
  </para>

  <para>
   引入了 <constant>Normalizer::FORM_KC_CF</constant> 作为 <literal>NFKC_Casefold</literal> 标准化的
   <methodname>Normalizer::normalize</methodname> 参数；当与 ICU ≥ 56 链接时可用。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.json">
  <title>JavaScript 对象表示法</title>

  <para>
   添加了新 <constant>JSON_THROW_ON_ERROR</constant> flag，可以与 <function>json_decode</function> 或 <function>json_encode</function>
   一起使用，并导致这些函数在发生错误时抛出新的 <classname>JsonException</classname>，而不是使用 <function>json_last_error</function> 和
   <function>json_last_error_msg</function> 检索全局错误状态。<constant>JSON_PARTIAL_OUTPUT_ON_ERROR</constant> 优先于
   <constant>JSON_THROW_ON_ERROR</constant>。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.mbstring">
  <title>多字节字符串</title>

  <para>
   配置项 <option role="configure">--with-libmbfl</option> 不再可用。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.uodbc">
  <title>ODBC (Unified)</title>

  <para>
   已移除对 <literal>ODBCRouter</literal> 和 <literal>Birdstep</literal> 的支持（包括 <literal>birdstep.max_links</literal> ini 指令）。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.opcache">
  <title>OPcache</title>

  <para>
   <literal>opcache.inherited_hack</literal> ini 指令已移除。自 PHP 5.3.0 起，已忽略该值。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.openssl">
  <title>OpenSSL</title>

  <para>
   添加了 <literal>min_proto_version</literal> 和 <literal>max_proto_version</literal> ssl stream 选项以及可能的 TLS 协议值的相关常量。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.pcre">
  <title>正则表达式（Perl 兼容）</title>

  <para>
   <link linkend="book.pcre">PCRE 扩展</link>已升级到 PCRE2，这可能会导致出现细微的行为变化（例如，现在对类中的字符范围进行更严格的解释），并增强了现有的正则表达式语法。
  </para>

  <para>
   <function>preg_quote</function> 现在也转义 <literal>'#'</literal> 字符。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.pdo-dblib">
  <title>Microsoft SQL Server 和 Sybase 函数（PDO_DBLIB）</title>

  <para>
   添加了属性 <constant>PDO::DBLIB_ATTR_SKIP_EMPTY_ROWSETS</constant> 以启用自动跳过 rowset。
  </para>

  <para>
   添加了公开 TDS 版本的 <constant>PDO::DBLIB_ATTR_TDS_VERSION</constant> 属性。
  </para>

  <para>
    DATETIME2 列现在被视为 DATETIME 列。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.pdo-sqlite">
  <title>SQLite 函数（PDO_SQLITE）</title>

  <para>
   现在可以通过将新的 <constant>PDO::SQLITE_ATTR_OPEN_FLAGS</constant> 属性设置 <constant>PDO::SQLITE_OPEN_READONLY</constant> 以只读模式打开 SQLite3 数据库。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.session">
  <title>Session 处理</title>

  <para>
   <function>session_set_cookie_params</function> 现在还支持以下签名：
   <methodsynopsis>
    <type>bool</type><methodname>session_set_cookie_params</methodname>
    <methodparam><type>array</type><parameter>options</parameter></methodparam>
   </methodsynopsis>
   其中 <literal>$options</literal> 是关联数组，可以存在以下任意 key
   <literal>"lifetime"</literal>、<literal>"path"</literal>、<literal>"domain"</literal>、<literal>"secure"</literal>、<literal>"httponly"</literal>
   和 <literal>"samesite"</literal>。因此，<function>session_get_cookie_params</function> 的返回值现在也有带有 <literal>"samesite"</literal> key
   的元素。此外，还添加了新的 <literal>session.cookie_samesite</literal> ini 选项来设置 cookie 的 SameSite 指令的默认值。默认为 <literal>""</literal>（空字符串），因此未设置
   SameSite 指令。可以设置为 <literal>"Lax"</literal> 或 <literal>"Strict"</literal>，这会设置相应的 SameSite 指令。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.tidy">
  <title>Tidy</title>

  <para>
   现在也透明地支持针对 <link xlink:href="&url.tidyp;">tidyp</link> 进行编译。由于 tidyp 没有提供 API 来获取发布日期，因此
   <function>tidy_get_release</function> 和 <methodname>tidy::getRelease</methodname> 在这种情况下返回 <literal>'unknown'</literal>。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.xml">
  <title>XML 解析器</title>

  <para>
   如果扩展是针对 libxml 编译，则不再忽略 <function>xml_set_external_entity_ref_handler</function>
   回调的返回值。以前，会忽略返回值，并且不会停止解析。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.zip">
  <title>Zip</title>

  <para>
   不建议针对捆绑的 libzip 进行编译，但通过在配置中添加 <option role="configure">--without-libzip</option> 仍然可以实现。
  </para>
 </sect2>

 <sect2 xml:id="migration73.other-changes.zlib">
  <title>Zlib 压缩</title>

  <para>
   <link linkend="wrappers.compression">compress.zlib 包装器</link>添加了 zlib/level
   上下文选项，以方便设置所需的压缩级别。
  </para>
 </sect2>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
