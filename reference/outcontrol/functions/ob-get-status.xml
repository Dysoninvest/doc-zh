<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: af7044e82ac0abe745ce3dfe2169e69a7e8e342f Maintainer: mowangjuanzi Status: ready -->
<refentry xml:id="function.ob-get-status" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ob_get_status</refname>
  <refpurpose>得到所有输出缓冲区的状态</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>ob_get_status</methodname>
   <methodparam choice="opt"><type>bool</type><parameter>full_status</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>ob_get_status</function> 返回最顶层输出缓冲区的状态信息；或者如果 <parameter>full_status</parameter>
   设为 &true;，返回所有有效的输出缓冲级别。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>full_status</parameter></term>
     <listitem>
      <para>
        设为 &true; 返回所有有效的输出缓冲区级别的状态信息。如果设为 &false; 或者没有设置，仅返回最顶层输出缓冲区的状态信息。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   如果省略了 <parameter>full_status</parameter> 或传递
   &false;，则返回简单的数组，该数组保存有关活动输出级别的状态信息。
  </para>
  <para>
   如果 <parameter>full_status</parameter> 为 &true;，则返回数组，其中每个元素都包含活动输出缓冲区级别。输出级别用作顶级数组的
   key，每个数组元素本身又是另一个数组，包含活动输出级别的状态信息。
  </para>
  <para>
   如果未打开输出缓冲，则返回空数组。
  </para>
  <para>
   <segmentedlist>
    <title><function>ob_get_status</function> 返回的数组元素</title>
    <segtitle>Key</segtitle><segtitle>值</segtitle>
    <seglistitem>
     <seg>name</seg>
     <seg>
      活动输出处理程序的名称（有关详细信息，请参阅 <function>ob_list_handlers</function> 的返回值）
     </seg>
    </seglistitem>
    <seglistitem>
     <seg>type</seg>
     <seg>
      <literal>0</literal>（内部处理程序）或
      <literal>1</literal>（用户提供的处理程序）
     </seg>
    </seglistitem>
    <seglistitem>
     <seg>flags</seg>
     <seg>
      <function>ob_start</function> 设置的 flag 掩码、输出处理程序的类型（见上文）和缓冲过程的状态（<link linkend="outcontrol.constants.flags-returned-by-handler">
      <constant>PHP_OUTPUT_HANDLER_<replaceable>*</replaceable></constant></link> 常量）。如果处理程序成功处理缓冲并且没有返回 &false;，则将会设置
      <constant>PHP_OUTPUT_HANDLER_STARTED</constant> 和 <constant>PHP_OUTPUT_HANDLER_PROCESSED</constant>。如果处理程序在处理缓冲时失败或返回 &false;，则将设置
      <constant>PHP_OUTPUT_HANDLER_STARTED</constant> 和 <constant>PHP_OUTPUT_HANDLER_DISABLED</constant>。
     </seg>
    </seglistitem>
    <seglistitem>
     <seg>level</seg>
     <seg>
      输出嵌套级别（从 0 开始）。注意 <function>ob_get_level</function> 对于相同级别返回的值相差 1。<function>ob_get_status</function>
      的第一级为 <literal>0</literal>，<function>ob_get_level</function> 的第一级为 <literal>1</literal>。
     </seg>
    </seglistitem>
    <seglistitem>
     <seg>chunk_size</seg>
     <seg>
      块大小（以字节为单位）。通过 <function>ob_start</function> 设置或启用 <link linkend="ini.output-buffering">output_buffering</link> 并将其值设置为正整数
     </seg>
    </seglistitem>
    <seglistitem>
     <seg>buffer_size</seg>
     <seg>
      输出缓冲区字节大小
     </seg>
    </seglistitem>
    <seglistitem>
     <seg>buffer_used</seg>
     <seg>
      输出缓冲区中数据的字节大小（与 <function>ob_get_length</function> 的整数返回值相同）
     </seg>
    </seglistitem>
   </segmentedlist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>当 <parameter>full_status</parameter> 是 &false; 的返回数组</title>
    <screen>
<![CDATA[
Array
(
    [name] => URL-Rewriter
    [type] => 0
    [flags] => 112
    [level] => 2
    [chunk_size] => 0
    [buffer_size] => 16384
    [buffer_used] => 1024
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>当 <parameter>full_status</parameter> 是 &true; 的返回数组</title>
    <screen>
<![CDATA[
Array
(
    [0] => Array
        (
            [name] => default output handler
            [type] => 0
            [flags] => 112
            [level] => 1
            [chunk_size] => 0
            [buffer_size] => 16384
            [buffer_used] => 2048
        )

    [1] => Array
        (
            [name] => URL-Rewriter
            [type] => 0
            [flags] => 112
            [level] => 2
            [chunk_size] => 0
            [buffer_size] => 16384
            [buffer_used] => 1024
        )

)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ob_get_level</function></member>
    <member><function>ob_list_handlers</function></member>
    <member><function>ob_get_length</function></member>
    <member><function>ob_start</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
