<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 7610e990293c87168d026ad078d8272e643e2c23 Maintainer: mowangjuanzi Status: partial -->
<chapter xml:id="outcontrol.flushing-system-buffers" xmlns="http://docbook.org/ns/docbook">
 <section>
  <title>冲刷系统缓冲区</title>
  <para>
   PHP 提供了两种相关的方式来冲刷系统缓冲区（发送并丢弃内容）：通过调用 <function>flush</function>
   以及通过 <function>ob_implicit_flush</function> 或 &php.ini; 文件中的 <link
   linkend="ini.implicit-flush">implicit_flush</link> 设置来启用自动冲刷。
  </para>
  <para>
   如果禁用了自动冲刷，PHP 仅在调用 <function>flush</function> 或脚本结束时才会冲刷输出。
  </para>
  <para>
   如果启用了自动冲刷，PHP 将尝试在每段代码块产生输出之后进行冲刷。在此上下文中，输出是指非零长度的数据，即：
   <itemizedlist xml:id="outputcontrol.what-is-output">
    <listitem>
     <simpara>
      <literal>&#60;?php ?&#62;</literal> 标签之外的内容
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      由语言结构和函数打印，其明确目的是打印用户提供的变量或字符串，例如
      <function>echo</function>、<function>print</function>、<function>printf</function>、<function>var_dump</function>、<function>var_export</function>、<function>vprintf</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      由函数打印，其明确目的是收集和输出有关正在运行的脚本或者 PHP 的数据/信息，例如
      <function>debug_print_backtrace</function>、<function>phpcredits</function>、<function>phpinfo</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      当 PHP 出现未捕获的异常或未处理的错误时（取决于 <link linkend="ini.display-errors">display_errors</link> 和
      <link linkend="ini.error-reporting">error_reporting</link> 的设置），会打印出相关信息。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      任何写入到 <literal>php://output</literal> 的内容
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <note>
   <simpara>
    打印空字符串或发送头部信息不会视为输出，因此不会导致冲刷操作。
   </simpara>
  </note>
  <warning>
   <simpara>
    如果启用了自动冲刷，控制字符（如 <literal>"\n"</literal>、<literal>"\r"</literal>、<literal>"\0"</literal>）也将触发冲刷操作。
   </simpara>
  </warning>
 </section>

 <section>
  <title>限制</title>
  <para>
   This functionality cannot flush user-level output buffers.
   To use these together, user-level output buffers must be flushed
   before flushing system buffers in order for PHP to produce any output.
  </para>
  <warning>
   <simpara>
    Calling <function>flush</function> or implicit flushing being enabled
    can interfere with output handlers of user-level output buffers
    that set and send headers in a web context
    (e.g. <function>ob_gzhandler</function>)
    by sending headers before these handlers can do so.
   </simpara>
  </warning>
  <para>
   Buffering implemented by the underlying software/hardware
   cannot be overridden by PHP and should be taken into account
   when working with PHP's buffer control functions.
   Checking the web servers/browsers/consoles buffering settings
   and working with these can alleviate possible issues.
   Working in a web context, either the web server's buffering settings
   or the script's buffering could be adjusted to work in tandem
   whereas working around the buffering strategies of various browsers
   can be achieved by adjusting buffering in the PHP script.
   On consoles that implement line buffering,
   newline characters could be inserted in the appropriate places
   before flushing output.
  </para>
 </section>

 <section>
  <title><acronym>SAPI</acronym> Differences In Flushing</title>
  <para>
   Although flushing is implemented by each <acronym>SAPI</acronym>
   in a slightly different way,
   these implementations fall in one of two categories:
   <itemizedlist>
    <listitem>
     <simpara>
      <acronym>SAPI</acronym>s used in a web context will flush headers first
      followed by the output.
      <literal>Apache2Handler</literal>, <literal>CGI</literal>,
      <literal>FastCGI</literal> and <literal>FPM</literal>
      are such <acronym>SAPI</acronym>s
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      other <acronym>SAPI</acronym>s
      such as <literal>CLI</literal> and <literal>embed</literal>
      will flush output only
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </section>

</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
